{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","name","email","className","href","TodoInfo","todo","id","title","completed","classNames","TodoList","todos","map","username","visibleTodos","userId","usersFromServer","find","App","useState","setTitle","setUser","errorTitle","setErrorTitle","errorUser","setErrorUser","setTodos","onSubmit","event","preventDefault","length","todoId","Math","max","currentUser","newTodo","currentTodos","action","method","htmlFor","type","value","onChange","target","placeholder","pattern","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b1a0ce9d.chunk.js","sourcesContent":["import React from 'react';\nimport { User } from '../types/User';\n\ntype Props = {\n  user: User,\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n    completed,\n    user,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={classNames(\n        'TodoInfo',\n        {\n          'TodoInfo--completed': completed,\n        },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && (<UserInfo user={user} />)}\n    </article>\n  );\n};\n","import React from 'react';\nimport { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo key={todo.id} todo={todo} />\n    ))}\n  </section>\n);\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React, { useState } from 'react';\nimport './App.scss';\n\nimport { TodoList } from './components/TodoList';\nimport { Todo } from './components/types/Todo';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nconst visibleTodos: Todo[] = todosFromServer.map(todo => (\n  {\n    ...todo,\n    user: usersFromServer.find(user => user.id === todo.userId) || null,\n  }\n));\n\nexport const App: React.FC = () => {\n  const [title, setTitle] = useState('');\n  const [userId, setUser] = useState(0);\n  const [errorTitle, setErrorTitle] = useState(false);\n  const [errorUser, setErrorUser] = useState(false);\n  const [todos, setTodos] = useState(visibleTodos);\n\n  const resetFields = () => {\n    setTitle('');\n    setUser(0);\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (!title.length) {\n      setErrorTitle(true);\n    }\n\n    if (!userId) {\n      setErrorUser(true);\n    }\n\n    if (userId && title.length) {\n      const todoId = Math.max(...todos.map(todo => todo.id)) + 1;\n      const currentUser = usersFromServer.find(\n        user => user.id === userId,\n      ) || null;\n      const newTodo = {\n        id: todoId,\n        title,\n        completed: false,\n        userId,\n        user: currentUser,\n      };\n\n      setTodos((currentTodos) => [...currentTodos, newTodo]);\n      resetFields();\n    }\n  };\n\n  const handleChangeTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setErrorTitle(false);\n  };\n\n  const handleChangeUser = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUser(+event.target.value);\n    setErrorUser(false);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        onSubmit={handleSubmit}\n        action=\"/api/users\"\n        method=\"POST\"\n      >\n        <div className=\"field\">\n          <label htmlFor=\"title\">Title:</label>\n\n          <input\n            type=\"text\"\n            value={title}\n            onChange={handleChangeTitle}\n            placeholder=\"Enter a title\"\n            data-cy=\"titleInput\"\n            pattern=\"^[а-яА-Яa-zA-Z\\s\\d]+$\"\n          />\n\n          {errorTitle\n            && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"user\">User:</label>\n\n          <select\n            placeholder=\"Choose a user\"\n            data-cy=\"userSelect\"\n            value={userId}\n            onChange={handleChangeUser}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n\n            {usersFromServer.map(user => (\n              <option\n                key={user.id}\n                value={user.id}\n              >\n                {user.name}\n              </option>\n            ))}\n          </select>\n\n          {errorUser\n            && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n          className=\"button\"\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}